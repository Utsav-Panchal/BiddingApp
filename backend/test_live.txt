# Step 1: Initialize a new Node.js project
npm init -y

# Step 2: Install React and ReactDOM
npm install react react-dom

# Step 3: (Optional) Install development tools like Webpack and Babel
npm install --save-dev webpack webpack-cli babel-loader @babel/core @babel/preset-env @babel/preset-react

# Step 4: Create a basic React app structure
mkdir src
echo "import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nconst App = () => <h1>Hello, React!</h1>;\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);" > src/index.jsx

# Step 5: Create an HTML file to mount React
echo "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset='UTF-8'>\n    <title>React App</title>\n  </head>\n  <body>\n    <div id='root'></div>\n    <script src='bundle.js'></script>\n  </body>\n</html>" > src/index.html

# Step 6: Add basic Webpack configuration
echo "const path = require('path');\nmodule.exports = {\n  entry: './src/index.jsx',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'bundle.js',\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env', '@babel/preset-react'],\n          },\n        },\n      },\n    ],\n  },\n  resolve: {\n    extensions: ['.js', '.jsx'],\n  },\n  devServer: {\n    static: './src',\n  },\n};" > webpack.config.js

# Step 7: Add Babel configuration
echo "{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\n}" > .babelrc

# Step 8: Build and run the app
npx webpack
# Or for development server:
npx webpack serve



===========================================================================================
